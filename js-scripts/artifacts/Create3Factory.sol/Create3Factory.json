{
  "abi": [
    {
      "inputs": [],
      "name": "ErrorCreatingContract",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ErrorCreatingProxy",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TargetAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "creationCode",
          "type": "bytes"
        }
      ],
      "name": "create",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "deployer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "predictAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610458806100206000396000f3fe6080604052600436106100295760003560e01c80635b37e1501461002e578063cb1939421461005d575b600080fd5b61004161003c366004610300565b61007d565b6040516001600160a01b03909116815260200160405180910390f35b34801561006957600080fd5b506100416100783660046103bb565b6100ca565b6040516001600160601b03193360601b166020820152603481018390526000906054016040516020818303038152906040528051906020012092506100c383833461010f565b9392505050565b6040516001600160601b0319606084901b166020820152603481018290526000906054016040516020818303038152906040528051906020012091506100c38261023c565b60408051808201909152601781527f630000000980600e6000396000f3363d8037363d34f0ff0000000000000000006020820152600090816101508661023c565b9050803b156101725760405163cd43efa160e01b815260040160405180910390fd5b60008683516020850187f590506001600160a01b0381166101a65760405163bbd2fe8760e01b815260040160405180910390fd5b6000816001600160a01b0316876040516101c091906103f3565b6000604051808303816000865af19150503d80600081146101fd576040519150601f19603f3d011682016040523d82523d6000602084013e610202565b606091505b505090508015806102125750823b155b15610230576040516353de54b960e01b815260040160405180910390fd5b50909695505050505050565b604080516001600160f81b031960208083019190915230606090811b6001600160601b0319908116602185015260358401959095527f68afe50fe78ae96feb6ec11f21f31fdd467c9fcc7add426282cfa3913daf04e9605580850191909152845180850390910181526075840185528051908301206135a560f21b6095850152901b9093166097820152600160f81b60ab8201528151608c81830301815260ac909101909152805191012090565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561031357600080fd5b82359150602083013567ffffffffffffffff8082111561033257600080fd5b818501915085601f83011261034657600080fd5b813581811115610358576103586102ea565b604051601f8201601f19908116603f01168101908382118183101715610380576103806102ea565b8160405282815288602084870101111561039957600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080604083850312156103ce57600080fd5b82356001600160a01b03811681146103e557600080fd5b946020939093013593505050565b6000825160005b8181101561041457602081860181015185830152016103fa565b50600092019182525091905056fea264697066735822122085d08e80f4579a889a5360a213f5e95034c641cedc336badcd50fc1688cddf2164736f6c63430008130033",
    "sourceMap": "548:710:101:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100295760003560e01c80635b37e1501461002e578063cb1939421461005d575b600080fd5b61004161003c366004610300565b61007d565b6040516001600160a01b03909116815260200160405180910390f35b34801561006957600080fd5b506100416100783660046103bb565b6100ca565b6040516001600160601b03193360601b166020820152603481018390526000906054016040516020818303038152906040528051906020012092506100c383833461010f565b9392505050565b6040516001600160601b0319606084901b166020820152603481018290526000906054016040516020818303038152906040528051906020012091506100c38261023c565b60408051808201909152601781527f630000000980600e6000396000f3363d8037363d34f0ff0000000000000000006020820152600090816101508661023c565b9050803b156101725760405163cd43efa160e01b815260040160405180910390fd5b60008683516020850187f590506001600160a01b0381166101a65760405163bbd2fe8760e01b815260040160405180910390fd5b6000816001600160a01b0316876040516101c091906103f3565b6000604051808303816000865af19150503d80600081146101fd576040519150601f19603f3d011682016040523d82523d6000602084013e610202565b606091505b505090508015806102125750823b155b15610230576040516353de54b960e01b815260040160405180910390fd5b50909695505050505050565b604080516001600160f81b031960208083019190915230606090811b6001600160601b0319908116602185015260358401959095527f68afe50fe78ae96feb6ec11f21f31fdd467c9fcc7add426282cfa3913daf04e9605580850191909152845180850390910181526075840185528051908301206135a560f21b6095850152901b9093166097820152600160f81b60ab8201528151608c81830301815260ac909101909152805191012090565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561031357600080fd5b82359150602083013567ffffffffffffffff8082111561033257600080fd5b818501915085601f83011261034657600080fd5b813581811115610358576103586102ea565b604051601f8201601f19908116603f01168101908382118183101715610380576103806102ea565b8160405282815288602084870101111561039957600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080604083850312156103ce57600080fd5b82356001600160a01b03811681146103e557600080fd5b946020939093013593505050565b6000825160005b8181101561041457602081860181015185830152016103fa565b50600092019182525091905056fea264697066735822122085d08e80f4579a889a5360a213f5e95034c641cedc336badcd50fc1688cddf2164736f6c63430008130033",
    "sourceMap": "548:710:101:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;629:309;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1304:32:212;;;1286:51;;1274:2;1259:18;629:309:101;;;;;;;976:280;;;;;;;;;;-1:-1:-1;976:280:101;;;;;:::i;:::-;;:::i;629:309::-;839:34;;-1:-1:-1;;;;;;856:10:101;1884:2:212;1880:15;1876:53;839:34:101;;;1864:66:212;1946:12;;;1939:28;;;724:7:101;;1983:12:212;;839:34:101;;;;;;;;;;;;829:45;;;;;;822:52;;887:46;903:4;909:12;923:9;887:15;:46::i;:::-;880:53;629:309;-1:-1:-1;;;629:309:101:o;976:280::-;1182:32;;-1:-1:-1;;;;;;1884:2:212;1880:15;;;1876:53;1182:32:101;;;1864:66:212;1946:12;;;1939:28;;;1067:7:101;;1983:12:212;;1182:32:101;;;;;;;;;;;;1172:43;;;;;;1165:50;;1228:23;1246:4;1228:17;:23::i;3308:813:100:-;3484:20;;;;;;;;;;;;;;;;;3415:7;;;3570:15;3580:4;3570:9;:15::i;:::-;3543:42;-1:-1:-1;2287:17:100;;3595:31;3591:65;;3635:21;;-1:-1:-1;;;3635:21:100;;;;;;;;;;;3591:65;3691:13;3838:4;3810:17;3804:24;3791:2;3772:17;3768:26;3753:5;3736:114;3727:123;-1:-1:-1;;;;;;3865:19:100;;3861:52;;3893:20;;-1:-1:-1;;;3893:20:100;;;;;;;;;;;3861:52;3960:12;3978:5;-1:-1:-1;;;;;3978:10:100;3989:12;3978:24;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3959:43;;;4013:7;4012:8;:43;;;-1:-1:-1;2287:17:100;;4024:31;4012:43;4008:79;;;4064:23;;-1:-1:-1;;;4064:23:100;;;;;;;;;;;4008:79;-1:-1:-1;4100:16:100;;3308:813;-1:-1:-1;;;;;;3308:813:100:o;4557:135::-;5513:153;;;-1:-1:-1;;;;;;5513:153:100;;;;2709:26:212;;;;4681:4:100;2772:2:212;2768:15;;;-1:-1:-1;;;;;;2764:53:212;;;2751:11;;;2744:74;2834:12;;;2827:28;;;;1934:66:100;2871:12:212;;;;2864:28;;;;5513:153:100;;;;;;;;;;2908:12:212;;;5513:153:100;;5490:188;;;;;;-1:-1:-1;;;5776:44:100;;;3262:28:212;3323:15;;3319:53;;;3306:11;;;3299:74;-1:-1:-1;;;3389:12:212;;;3382:33;5776:44:100;;;;;;;;;3431:12:212;;;;5776:44:100;;;5766:55;;;;;;4557:135::o;14:127:212:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:989;223:6;231;284:2;272:9;263:7;259:23;255:32;252:52;;;300:1;297;290:12;252:52;336:9;323:23;313:33;;397:2;386:9;382:18;369:32;420:18;461:2;453:6;450:14;447:34;;;477:1;474;467:12;447:34;515:6;504:9;500:22;490:32;;560:7;553:4;549:2;545:13;541:27;531:55;;582:1;579;572:12;531:55;618:2;605:16;640:2;636;633:10;630:36;;;646:18;;:::i;:::-;721:2;715:9;689:2;775:13;;-1:-1:-1;;771:22:212;;;795:2;767:31;763:40;751:53;;;819:18;;;839:22;;;816:46;813:72;;;865:18;;:::i;:::-;905:10;901:2;894:22;940:2;932:6;925:18;980:7;975:2;970;966;962:11;958:20;955:33;952:53;;;1001:1;998;991:12;952:53;1057:2;1052;1048;1044:11;1039:2;1031:6;1027:15;1014:46;1102:1;1097:2;1092;1084:6;1080:15;1076:24;1069:35;1123:6;1113:16;;;;;;;146:989;;;;;:::o;1348:354::-;1416:6;1424;1477:2;1465:9;1456:7;1452:23;1448:32;1445:52;;;1493:1;1490;1483:12;1445:52;1519:23;;-1:-1:-1;;;;;1571:31:212;;1561:42;;1551:70;;1617:1;1614;1607:12;1551:70;1640:5;1692:2;1677:18;;;;1664:32;;-1:-1:-1;;;1348:354:212:o;2006:412::-;2135:3;2173:6;2167:13;2198:1;2208:129;2222:6;2219:1;2216:13;2208:129;;;2320:4;2304:14;;;2300:25;;2294:32;2281:11;;;2274:53;2237:12;2208:129;;;-1:-1:-1;2392:1:212;2356:16;;2381:13;;;-1:-1:-1;2356:16:212;2006:412;-1:-1:-1;2006:412:212:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "create(bytes32,bytes)": "5b37e150",
    "predictAddress(address,bytes32)": "cb193942"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ErrorCreatingContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ErrorCreatingProxy\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TargetAlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"creationCode\",\"type\":\"bytes\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"predictAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"BGD Labs\",\"kind\":\"dev\",\"methods\":{\"create(bytes32,bytes)\":{\"details\":\"The provided salt is hashed together with msg.sender to generate the final salt\",\"params\":{\"creationCode\":\"The creation code of the contract to deploy\",\"salt\":\"The deployer-specific salt for determining the deployed contract's address\"},\"returns\":{\"_0\":\"The address of the deployed contract\"}},\"predictAddress(address,bytes32)\":{\"details\":\"The provided salt is hashed together with the deployer address to generate the final salt\",\"params\":{\"deployer\":\"The deployer account that will call deploy()\",\"salt\":\"The deployer-specific salt for determining the deployed contract's address\"},\"returns\":{\"_0\":\"The address of the contract that will be deployed\"}}},\"title\":\"Factory for deploying contracts to deterministic addresses via Create3\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"create(bytes32,bytes)\":{\"notice\":\"Deploys a contract using Create3\"},\"predictAddress(address,bytes32)\":{\"notice\":\"Predicts the address of a deployed contract\"}},\"notice\":\"Enables deploying contracts using CREATE3. Each deployer (msg.sender) has its own namespace for deployed addresses.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/solidity-utils/src/contracts/create3/Create3Factory.sol\":\"Create3Factory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aave/core-v3/=lib/aave-address-book/lib/aave-v3-core/\",\":@aave/periphery-v3/=lib/aave-address-book/lib/aave-v3-periphery/\",\":@openzeppelin/=lib/aave-crosschain-infra/lib/openzeppelin-contracts/\",\":aave-address-book/=lib/aave-address-book/src/\",\":aave-crosschain-infra-scripts/=lib/aave-crosschain-infra/scripts/\",\":aave-crosschain-infra/=lib/aave-crosschain-infra/src/\",\":aave-token-v2/=lib/aave-token-v3/lib/aave-token-v2/contracts/\",\":aave-token-v3/=lib/aave-token-v3/src/\",\":aave-v3-core/=lib/aave-address-book/lib/aave-v3-core/\",\":aave-v3-periphery/=lib/aave-address-book/lib/aave-v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":hyperlane-monorepo/=lib/aave-crosschain-infra/lib/hyperlane-monorepo/\",\":nitro-contracts/=lib/aave-crosschain-infra/lib/nitro-contracts/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidity-examples/=lib/aave-crosschain-infra/lib/solidity-examples/contracts/\",\":solidity-utils/=lib/solidity-utils/src/\"]},\"sources\":{\"lib/solidity-utils/src/contracts/create3/Create3.sol\":{\"keccak256\":\"0x0169993c9a76b11f6c797b3c2ed8d60c1ca90f75a2d8cbe2b7948f233d737d68\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://683769cddfba96efd93ce31bf5a6650f81572594ae63774ff1e7531a14892a2e\",\"dweb:/ipfs/QmRoGvEy5ew2hb9UY5naJn6Eu3N3ijV4EujZsEP4XLLXnn\"]},\"lib/solidity-utils/src/contracts/create3/Create3Factory.sol\":{\"keccak256\":\"0x5c0e373c5032c4d5882b094db72adf7b837eb2b8efbb41ee1722e6fa6668fc1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09cb5f5f97675cab163321c59acb28fa587c93377eb792107d8c363d99648559\",\"dweb:/ipfs/QmaGcJkSkmracUVgAdT5i4nfqMDCUnVnVijags2ADRJ1Cq\"]},\"lib/solidity-utils/src/contracts/create3/interfaces/ICreate3Factory.sol\":{\"keccak256\":\"0x7bc4708c5094f68ec7c12cc88c3516d31ed6f9d8d0a8138a4978f17c6d7edbe2\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://91198e4ec13b097e3583716447693f5f1cfdc82afd8b39e9d804cfa9f2a8e909\",\"dweb:/ipfs/QmbwxSpSsgtQrrm5n6KqQQq6dpkaGCXPJcHhHZw6qLcAP6\"]},\"lib/solidity-utils/src/contracts/oz-common/Context.sol\":{\"keccak256\":\"0x6912c0cdc79f627eaa1511695fa0c14389681720812e5548645774d784bc24df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f2ae1b63c4be0f695d721e28361b34fe22a2e7e05723ca466b3ad2dde73db6f\",\"dweb:/ipfs/Qman92tY6xcqnXZa59TJiJKtf4Hhe5hhJrdERiStBV8EiK\"]},\"lib/solidity-utils/src/contracts/oz-common/Ownable.sol\":{\"keccak256\":\"0x5566fcff7455a22cde32daecec5c44c893dddee1472063f2dcd301e844eabd00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://306860d4e8ecf8cf5928dd757f0e8f8530f05791a0a133acfc9be91d8e75f24a\",\"dweb:/ipfs/QmeuzENUkcz5GFTsXJUsMj1NpjbHg8hNJPDBtWzLAnEjkm\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "ErrorCreatingContract"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ErrorCreatingProxy"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TargetAlreadyExists"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "creationCode",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "create",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "deployer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "predictAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "create(bytes32,bytes)": {
            "details": "The provided salt is hashed together with msg.sender to generate the final salt",
            "params": {
              "creationCode": "The creation code of the contract to deploy",
              "salt": "The deployer-specific salt for determining the deployed contract's address"
            },
            "returns": {
              "_0": "The address of the deployed contract"
            }
          },
          "predictAddress(address,bytes32)": {
            "details": "The provided salt is hashed together with the deployer address to generate the final salt",
            "params": {
              "deployer": "The deployer account that will call deploy()",
              "salt": "The deployer-specific salt for determining the deployed contract's address"
            },
            "returns": {
              "_0": "The address of the contract that will be deployed"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "create(bytes32,bytes)": {
            "notice": "Deploys a contract using Create3"
          },
          "predictAddress(address,bytes32)": {
            "notice": "Predicts the address of a deployed contract"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@aave/core-v3/=lib/aave-address-book/lib/aave-v3-core/",
        "@aave/periphery-v3/=lib/aave-address-book/lib/aave-v3-periphery/",
        "@openzeppelin/=lib/aave-crosschain-infra/lib/openzeppelin-contracts/",
        "aave-address-book/=lib/aave-address-book/src/",
        "aave-crosschain-infra-scripts/=lib/aave-crosschain-infra/scripts/",
        "aave-crosschain-infra/=lib/aave-crosschain-infra/src/",
        "aave-token-v2/=lib/aave-token-v3/lib/aave-token-v2/contracts/",
        "aave-token-v3/=lib/aave-token-v3/src/",
        "aave-v3-core/=lib/aave-address-book/lib/aave-v3-core/",
        "aave-v3-periphery/=lib/aave-address-book/lib/aave-v3-periphery/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "hyperlane-monorepo/=lib/aave-crosschain-infra/lib/hyperlane-monorepo/",
        "nitro-contracts/=lib/aave-crosschain-infra/lib/nitro-contracts/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "solidity-examples/=lib/aave-crosschain-infra/lib/solidity-examples/contracts/",
        "solidity-utils/=lib/solidity-utils/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/solidity-utils/src/contracts/create3/Create3Factory.sol": "Create3Factory"
      },
      "libraries": {}
    },
    "sources": {
      "lib/solidity-utils/src/contracts/create3/Create3.sol": {
        "keccak256": "0x0169993c9a76b11f6c797b3c2ed8d60c1ca90f75a2d8cbe2b7948f233d737d68",
        "urls": [
          "bzz-raw://683769cddfba96efd93ce31bf5a6650f81572594ae63774ff1e7531a14892a2e",
          "dweb:/ipfs/QmRoGvEy5ew2hb9UY5naJn6Eu3N3ijV4EujZsEP4XLLXnn"
        ],
        "license": "Unlicense"
      },
      "lib/solidity-utils/src/contracts/create3/Create3Factory.sol": {
        "keccak256": "0x5c0e373c5032c4d5882b094db72adf7b837eb2b8efbb41ee1722e6fa6668fc1c",
        "urls": [
          "bzz-raw://09cb5f5f97675cab163321c59acb28fa587c93377eb792107d8c363d99648559",
          "dweb:/ipfs/QmaGcJkSkmracUVgAdT5i4nfqMDCUnVnVijags2ADRJ1Cq"
        ],
        "license": "MIT"
      },
      "lib/solidity-utils/src/contracts/create3/interfaces/ICreate3Factory.sol": {
        "keccak256": "0x7bc4708c5094f68ec7c12cc88c3516d31ed6f9d8d0a8138a4978f17c6d7edbe2",
        "urls": [
          "bzz-raw://91198e4ec13b097e3583716447693f5f1cfdc82afd8b39e9d804cfa9f2a8e909",
          "dweb:/ipfs/QmbwxSpSsgtQrrm5n6KqQQq6dpkaGCXPJcHhHZw6qLcAP6"
        ],
        "license": "AGPL-3.0"
      },
      "lib/solidity-utils/src/contracts/oz-common/Context.sol": {
        "keccak256": "0x6912c0cdc79f627eaa1511695fa0c14389681720812e5548645774d784bc24df",
        "urls": [
          "bzz-raw://3f2ae1b63c4be0f695d721e28361b34fe22a2e7e05723ca466b3ad2dde73db6f",
          "dweb:/ipfs/Qman92tY6xcqnXZa59TJiJKtf4Hhe5hhJrdERiStBV8EiK"
        ],
        "license": "MIT"
      },
      "lib/solidity-utils/src/contracts/oz-common/Ownable.sol": {
        "keccak256": "0x5566fcff7455a22cde32daecec5c44c893dddee1472063f2dcd301e844eabd00",
        "urls": [
          "bzz-raw://306860d4e8ecf8cf5928dd757f0e8f8530f05791a0a133acfc9be91d8e75f24a",
          "dweb:/ipfs/QmeuzENUkcz5GFTsXJUsMj1NpjbHg8hNJPDBtWzLAnEjkm"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/solidity-utils/src/contracts/create3/Create3Factory.sol",
    "id": 64884,
    "exportedSymbols": {
      "Create3": [
        64815
      ],
      "Create3Factory": [
        64883
      ],
      "ICreate3Factory": [
        64907
      ],
      "Ownable": [
        65372
      ]
    },
    "nodeType": "SourceUnit",
    "src": "127:1132:101",
    "nodes": [
      {
        "id": 64817,
        "nodeType": "PragmaDirective",
        "src": "127:23:101",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 64819,
        "nodeType": "ImportDirective",
        "src": "152:38:101",
        "nodes": [],
        "absolutePath": "lib/solidity-utils/src/contracts/create3/Create3.sol",
        "file": "./Create3.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64884,
        "sourceUnit": 64816,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64818,
              "name": "Create3",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 64815,
              "src": "160:7:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64821,
        "nodeType": "ImportDirective",
        "src": "191:49:101",
        "nodes": [],
        "absolutePath": "lib/solidity-utils/src/contracts/oz-common/Ownable.sol",
        "file": "../oz-common/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64884,
        "sourceUnit": 65373,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64820,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 65372,
              "src": "199:7:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64823,
        "nodeType": "ImportDirective",
        "src": "241:65:101",
        "nodes": [],
        "absolutePath": "lib/solidity-utils/src/contracts/create3/interfaces/ICreate3Factory.sol",
        "file": "./interfaces/ICreate3Factory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64884,
        "sourceUnit": 64908,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64822,
              "name": "ICreate3Factory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 64907,
              "src": "249:15:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64883,
        "nodeType": "ContractDefinition",
        "src": "548:710:101",
        "nodes": [
          {
            "id": 64856,
            "nodeType": "FunctionDefinition",
            "src": "629:309:101",
            "nodes": [],
            "body": {
              "id": 64855,
              "nodeType": "Block",
              "src": "733:205:101",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 64845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 64836,
                      "name": "salt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64829,
                      "src": "822:4:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 64840,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "856:3:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 64841,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "860:6:101",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "856:10:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 64842,
                              "name": "salt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64829,
                              "src": "868:4:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 64838,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "839:3:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 64839,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "843:12:101",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "839:16:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 64843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "839:34:101",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 64837,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "829:9:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 64844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "829:45:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "822:52:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 64846,
                  "nodeType": "ExpressionStatement",
                  "src": "822:52:101"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64849,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64829,
                        "src": "903:4:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 64850,
                        "name": "creationCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64831,
                        "src": "909:12:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 64851,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "923:3:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 64852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "927:5:101",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "923:9:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 64847,
                        "name": "Create3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64815,
                        "src": "887:7:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Create3_$64815_$",
                          "typeString": "type(library Create3)"
                        }
                      },
                      "id": 64848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "895:7:101",
                      "memberName": "create3",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64747,
                      "src": "887:15:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes memory,uint256) returns (address)"
                      }
                    },
                    "id": 64853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "887:46:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 64835,
                  "id": 64854,
                  "nodeType": "Return",
                  "src": "880:53:101"
                }
              ]
            },
            "baseFunctions": [
              64896
            ],
            "documentation": {
              "id": 64827,
              "nodeType": "StructuredDocumentation",
              "src": "595:31:101",
              "text": "@inheritdoc\tICreate3Factory"
            },
            "functionSelector": "5b37e150",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "create",
            "nameLocation": "638:6:101",
            "parameters": {
              "id": 64832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64829,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "658:4:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 64856,
                  "src": "650:12:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 64828,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "650:7:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64831,
                  "mutability": "mutable",
                  "name": "creationCode",
                  "nameLocation": "681:12:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 64856,
                  "src": "668:25:101",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 64830,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "668:5:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "644:53:101"
            },
            "returnParameters": {
              "id": 64835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64834,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64856,
                  "src": "724:7:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64833,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "724:7:101",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "723:9:101"
            },
            "scope": 64883,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64882,
            "nodeType": "FunctionDefinition",
            "src": "976:280:101",
            "nodes": [],
            "body": {
              "id": 64881,
              "nodeType": "Block",
              "src": "1076:180:101",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 64874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 64866,
                      "name": "salt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64861,
                      "src": "1165:4:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 64870,
                              "name": "deployer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64859,
                              "src": "1199:8:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 64871,
                              "name": "salt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64861,
                              "src": "1209:4:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 64868,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "1182:3:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 64869,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1186:12:101",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "1182:16:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 64872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1182:32:101",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 64867,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "1172:9:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 64873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1172:43:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1165:50:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 64875,
                  "nodeType": "ExpressionStatement",
                  "src": "1165:50:101"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64878,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64861,
                        "src": "1246:4:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 64876,
                        "name": "Create3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64815,
                        "src": "1228:7:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Create3_$64815_$",
                          "typeString": "type(library Create3)"
                        }
                      },
                      "id": 64877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1236:9:101",
                      "memberName": "addressOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64764,
                      "src": "1228:17:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32) view returns (address)"
                      }
                    },
                    "id": 64879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1228:23:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 64865,
                  "id": 64880,
                  "nodeType": "Return",
                  "src": "1221:30:101"
                }
              ]
            },
            "baseFunctions": [
              64906
            ],
            "documentation": {
              "id": 64857,
              "nodeType": "StructuredDocumentation",
              "src": "942:31:101",
              "text": "@inheritdoc\tICreate3Factory"
            },
            "functionSelector": "cb193942",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "predictAddress",
            "nameLocation": "985:14:101",
            "parameters": {
              "id": 64862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64859,
                  "mutability": "mutable",
                  "name": "deployer",
                  "nameLocation": "1013:8:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 64882,
                  "src": "1005:16:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64858,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1005:7:101",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64861,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "1035:4:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 64882,
                  "src": "1027:12:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 64860,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1027:7:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "999:44:101"
            },
            "returnParameters": {
              "id": 64865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64864,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64882,
                  "src": "1067:7:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1067:7:101",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1066:9:101"
            },
            "scope": 64883,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 64825,
              "name": "ICreate3Factory",
              "nameLocations": [
                "575:15:101"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 64907,
              "src": "575:15:101"
            },
            "id": 64826,
            "nodeType": "InheritanceSpecifier",
            "src": "575:15:101"
          }
        ],
        "canonicalName": "Create3Factory",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 64824,
          "nodeType": "StructuredDocumentation",
          "src": "308:239:101",
          "text": " @title Factory for deploying contracts to deterministic addresses via Create3\n @author BGD Labs\n @notice Enables deploying contracts using CREATE3. Each deployer (msg.sender) has its own namespace for deployed addresses."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          64883,
          64907
        ],
        "name": "Create3Factory",
        "nameLocation": "557:14:101",
        "scope": 64884,
        "usedErrors": [
          64642,
          64644,
          64646
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 101
}